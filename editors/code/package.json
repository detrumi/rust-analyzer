{
    "name": "ra-lsp",
    "displayName": "ra-lsp",
    "description": "An alternative rust language server to the RLS",
    "preview": true,
    "private": true,
    "version": "0.0.1",
    "publisher": "matklad",
    "repository": {
        "url": "https://github.com/matklad/rust-analyzer/"
    },
    "categories": [
        "Other"
    ],
    "engines": {
        "vscode": "^1.41.0"
    },
    "scripts": {
        "vscode:prepublish": "rollup -c",
        "package": "vsce package",
        "watch": "tsc -watch -p ./",
        "fmt": "tsfmt -r && tslint -c tslint.json 'src/**/*.ts' --fix"
    },
    "dependencies": {
        "jsonc-parser": "^2.1.0",
        "seedrandom": "^3.0.5",
        "vscode-languageclient": "^6.0.0-next.9"
    },
    "devDependencies": {
        "@rollup/plugin-commonjs": "^11.0.0",
        "@rollup/plugin-node-resolve": "^6.0.0",
        "@rollup/plugin-typescript": "^2.0.1",
        "@types/node": "^12.12.21",
        "@types/seedrandom": "^2.4.28",
        "@types/vscode": "^1.41.0",
        "rollup": "^1.27.14",
        "tslib": "^1.10.0",
        "tslint": "^5.20.1",
        "typescript": "^3.7.3",
        "typescript-formatter": "^7.2.2",
        "vsce": "^1.71.0"
    },
    "activationEvents": [
        "onLanguage:rust",
        "onCommand:rust-analyzer.analyzerStatus",
        "onCommand:rust-analyzer.collectGarbage",
        "workspaceContains:**/Cargo.toml"
    ],
    "main": "./out/main",
    "contributes": {
        "taskDefinitions": [
            {
                "type": "cargo",
                "required": [
                    "command"
                ],
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "command": {
                        "type": "string"
                    },
                    "args": {
                        "type": "array"
                    },
                    "env": {
                        "type": "object"
                    }
                }
            }
        ],
        "commands": [
            {
                "command": "rust-analyzer.syntaxTree",
                "title": "Show Syntax Tree",
                "category": "Rust Analyzer"
            },
            {
                "command": "rust-analyzer.expandMacro",
                "title": "Expand macro recursively",
                "category": "Rust Analyzer"
            },
            {
                "command": "rust-analyzer.matchingBrace",
                "title": "Find matching brace",
                "category": "Rust Analyzer"
            },
            {
                "command": "rust-analyzer.parentModule",
                "title": "Locate parent module",
                "category": "Rust Analyzer"
            },
            {
                "command": "rust-analyzer.joinLines",
                "title": "Join lines",
                "category": "Rust Analyzer"
            },
            {
                "command": "rust-analyzer.run",
                "title": "Run",
                "category": "Rust Analyzer"
            },
            {
                "command": "rust-analyzer.analyzerStatus",
                "title": "Status",
                "category": "Rust Analyzer"
            },
            {
                "command": "rust-analyzer.collectGarbage",
                "title": "Run garbage collection",
                "category": "Rust Analyzer"
            },
            {
                "command": "rust-analyzer.reload",
                "title": "Restart server",
                "category": "Rust Analyzer"
            }
        ],
        "keybindings": [
            {
                "command": "rust-analyzer.parentModule",
                "key": "ctrl+u",
                "when": "editorTextFocus && editorLangId == rust"
            },
            {
                "command": "rust-analyzer.matchingBrace",
                "key": "ctrl+shift+m",
                "when": "editorTextFocus && editorLangId == rust"
            },
            {
                "command": "rust-analyzer.joinLines",
                "key": "ctrl+shift+j",
                "when": "editorTextFocus && editorLangId == rust"
            },
            {
                "command": "rust-analyzer.run",
                "key": "ctrl+r",
                "when": "editorTextFocus && editorLangId == rust"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Rust Analyzer",
            "properties": {
                "rust-analyzer.highlightingOn": {
                    "type": "boolean",
                    "default": false,
                    "description": "Highlight Rust code (overrides built-in syntax highlighting)"
                },
                "rust-analyzer.rainbowHighlightingOn": {
                    "type": "boolean",
                    "default": false,
                    "description": "When highlighting Rust code, use a unique color per identifier"
                },
                "rust-analyzer.featureFlags": {
                    "type": "object",
                    "default": {},
                    "description": "Fine grained feature flags to disable annoying features"
                },
                "rust-analyzer.enableEnhancedTyping": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enables enhanced typing. NOTE: If using a VIM extension, you should set this to false"
                },
                "rust-analyzer.raLspServerPath": {
                    "type": [
                        "string"
                    ],
                    "default": "ra_lsp_server",
                    "description": "Path to ra_lsp_server executable"
                },
                "rust-analyzer.excludeGlobs": {
                    "type": "array",
                    "default": [],
                    "description": "Paths to exclude from analysis"
                },
                "rust-analyzer.useClientWatching": {
                    "type": "boolean",
                    "default": true,
                    "description": "client provided file watching instead of notify watching."
                },
                "rust-analyzer.cargo-watch.enable": {
                    "type": "boolean",
                    "default": true,
                    "description": "Run `cargo check` for diagnostics on save"
                },
                "rust-analyzer.cargo-watch.arguments": {
                    "type": "array",
                    "description": "`cargo-watch` arguments. (e.g: `--features=\"shumway,pdf\"` will run as `cargo watch -x \"check --features=\"shumway,pdf\"\"` )",
                    "default": []
                },
                "rust-analyzer.cargo-watch.command": {
                    "type": "string",
                    "description": "`cargo-watch` command. (e.g: `clippy` will run as `cargo watch -x clippy` )",
                    "default": "check"
                },
                "rust-analyzer.cargo-watch.allTargets": {
                    "type": "boolean",
                    "description": "Check all targets and tests (will be passed as `--all-targets`)",
                    "default": true
                },
                "rust-analyzer.trace.server": {
                    "type": "string",
                    "scope": "window",
                    "enum": [
                        "off",
                        "messages",
                        "verbose"
                    ],
                    "enumDescriptions": [
                        "No traces",
                        "Error only",
                        "Full log"
                    ],
                    "default": "off",
                    "description": "Trace requests to the ra_lsp_server"
                },
                "rust-analyzer.lruCapacity": {
                    "type": "number",
                    "default": null,
                    "description": "Number of syntax trees rust-analyzer keeps in memory"
                },
                "rust-analyzer.displayInlayHints": {
                    "type": "boolean",
                    "default": true,
                    "description": "Display additional type information in the editor"
                },
                "rust-analyzer.maxInlayHintLength": {
                    "type": "number",
                    "default": 20,
                    "description": "Maximum length for inlay hints"
                },
                "rust-analyzer.cargoFeatures.noDefaultFeatures": {
                    "type": "boolean",
                    "default": false,
                    "description": "Do not activate the `default` feature"
                },
                "rust-analyzer.cargoFeatures.allFeatures": {
                    "type": "boolean",
                    "default": true,
                    "description": "Activate all available features"
                },
                "rust-analyzer.cargoFeatures.features": {
                    "type": "array",
                    "default": [],
                    "description": "List of features to activate"
                },
                "rust-analyzer.workspaceRelativePath": {
                    "type": "string",
                    "default": "",
                    "description": "Relative path from workspace root to Cargo.toml"
                }
            }
        },
        "problemPatterns": [
            {
                "name": "rustc",
                "patterns": [
                    {
                        "regexp": "^(warning|warn|error)(?:\\[(.*?)\\])?: (.*)$",
                        "severity": 1,
                        "code": 2,
                        "message": 3
                    },
                    {
                        "regexp": "^[\\s->=]*(.*?):(\\d*):(\\d*)\\s*$",
                        "file": 1,
                        "line": 2,
                        "column": 3
                    }
                ]
            },
            {
                "name": "rustc-json",
                "patterns": [
                    {
                        "regexp": "^.*\"message\":{\"message\":\"([^\"]*).*?\"file_name\":\"([^\"]+).*?\"line_start\":(\\d+).*?\"line_end\":(\\d+).*?\"column_start\":(\\d+).*?\"column_end\":(\\d+).*}$",
                        "message": 1,
                        "file": 2,
                        "line": 3,
                        "endLine": 4,
                        "column": 5,
                        "endColumn": 6
                    }
                ]
            }
        ],
        "problemMatchers": [
            {
                "name": "rustc",
                "fileLocation": [
                    "relative",
                    "${workspaceRoot}"
                ],
                "pattern": "$rustc"
            },
            {
                "name": "rustc-json",
                "fileLocation": [
                    "relative",
                    "${workspaceRoot}"
                ],
                "pattern": "$rustc-json"
            },
            {
                "name": "rustc-watch",
                "fileLocation": [
                    "relative",
                    "${workspaceRoot}"
                ],
                "background": {
                    "beginsPattern": "^\\[Running\\b",
                    "endsPattern": "^\\[Finished running\\b"
                },
                "pattern": "$rustc"
            }
        ],
        "colors": [
            {
                "id": "rust_analyzer.inlayHint",
                "description": "Color for inlay hints",
                "defaults": {
                    "dark": "#A0A0A0F0",
                    "light": "#747474",
                    "highContrast": "#BEBEBE"
                }
            }
        ]
    }
}
